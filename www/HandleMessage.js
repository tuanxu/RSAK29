var str_public_key_N = "";var str_public_key_E = "";var BigInt_N;var BigInt_E;var str_private_key_N = "";var str_private_key_E = "";var str_private_key_D = "";var BigInt_private_N;var BigInt_private_E;var BigInt_private_D;var link_RSA_Init = "http://localhost/rsa.php?task_from_client=init";var link_RSA_get_public_key = "http://localhost/rsa.php?task_from_client=getpublickey";var link_RSA_get_private_key = "http://localhost/rsa.php?task_from_client=getprivatekey";var link_RSA_ReceivedFromClient = "http://localhost/rsa.php?task_from_client=receivedfromclient&m=";var glb_username = "";function GetPublicKey() {    let xhr = new XMLHttpRequest();    xhr.onreadystatechange = function() {        if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {            var response = xhr.responseText;						//create public key N,E            var str_public_key=response;			var keys = str_public_key.split('-');			str_public_key_N = keys[0].trim();			console.log(str_public_key_N);			BigInt_N = new bigInt(str_public_key_N, 16); 			str_public_key_E= keys[1].trim();			console.log(str_public_key_E);			BigInt_E = new bigInt(str_public_key_E, 16); 			            document.getElementById("lblGetPublicKey_Response").innerHTML = str_public_key;            document.getElementById("lblGetPublicKey_N_Response").innerHTML = str_public_key_N;            document.getElementById("lblGetPublicKey_E_Response").innerHTML = str_public_key_E;        }    };    xhr.open("GET",link_RSA_get_public_key , true);    xhr.send();}function GetPrivateKey() {    let xhr = new XMLHttpRequest();    xhr.onreadystatechange = function() {        if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {            var response = xhr.responseText;						//create public key N,E,D            var str_private_key=response;			var keys = str_private_key.split('-');			str_private_key_N = keys[0].trim();			//console.log(str_private_key_N);			BigInt_private_N = new bigInt(str_private_key_N, 16); 						str_private_key_E= keys[1].trim();			//console.log(str_private_key_E);			BigInt_private_E = new bigInt(str_private_key_E, 16); 						str_private_key_D= keys[2].trim();			//console.log(str_private_key_E);			BigInt_private_D = new bigInt(str_private_key_D, 16); 			            document.getElementById("lblGetPrivateKey_Response").innerHTML = str_private_key;            document.getElementById("lblGetPrivateKey_N_Response").innerHTML = str_private_key_N;            document.getElementById("lblGetPrivateKey_E_Response").innerHTML = str_private_key_E;            document.getElementById("lblGetPrivateKey_D_Response").innerHTML = str_private_key_D;        }    };    xhr.open("GET",link_RSA_get_private_key , true);    xhr.send();}function InitRSA() {	console.log("abc");    let xhr = new XMLHttpRequest();    xhr.onreadystatechange = function() {        if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {            var response = xhr.responseText;            //console.log(response);            document.getElementById("lblInitRSA_Response").innerHTML = response;        }    };    xhr.open("GET", link_RSA_Init, true);    xhr.send();}	function EncryptMessage(txtMessage){		var result = "";		for (var i = 0; i < txtMessage.length; i++) {		  var m = bigInt(txtMessage.charCodeAt(i));		  var c = m.modPow (BigInt_E,BigInt_N);		  result = result + c.toString(16);		  if(i < txtMessage.length - 1)			result = result + "-";		}			console.log(result);		return result;	}	function DecryptMessage(txtMessageEncrypted){		var result = "";		for (var i = 0; i < txtMessage.length; i++) {		  var m = bigInt(txtMessage.charCodeAt(i));		  var c = m.modPow (BigInt_E,BigInt_N);		  result = result + c.toString(16);		  if(i < txtMessage.length - 1)			result = result + "-";		}			console.log(result);		return result;	}    function EncryptMessageAndSend() {		var txtMessage = document.getElementById("txtMessage").value;		txtMessage_Encrypted = EncryptMessage(txtMessage);		txtMessage_Encrypted = txtMessage_Encrypted.toUpperCase();		document.getElementById("lblEncryptedMessage").innerHTML = txtMessage_Encrypted;		        let xhr = new XMLHttpRequest();        xhr.onreadystatechange = function() {            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {                var response = xhr.responseText;                document.getElementById("lblResponseMessage").innerHTML = response;								            }        };		var link = link_RSA_ReceivedFromClient + txtMessage_Encrypted + "&u=" + glb_username+ "&privatekeyn=" + str_private_key_N+ "&privatekeye=" + str_private_key_E;		 alert(link);        xhr.open("GET", link , true);        xhr.send();    }	